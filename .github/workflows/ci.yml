name: CI

on:
  push:
    branches:
      # on all branches
      - '*'

jobs:
  manylinux_build:
    name: Build linux ${{ matrix.python.name }} wheel
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64:2022-11-01-e47a7a6
    strategy:
      matrix:
        python:
#          - {
#            name: cp39,
#            abi: cp39,
#            version: '3.9',
#          }
          - {
            name: cp310,
            abi: cp310,
            version: '3.10',
          }
#          - {
#            name: cp311,
#            abi: cp311,
#            version: '3.11',
#          }

    steps:
      - name: Install Linux packages
        run: yum install -y zlib-devel.x86_64 wget

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install of Clang and Cmake
        run: |
          yum -y install clang
          yum -y install cmake

      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup path
        run: echo "/opt/python/${{ matrix.python.name }}-${{ matrix.python.abi }}/bin/" >> $GITHUB_PATH

      - name: Specific install for pypowsybl branch
        run: |
          wget https://downloads.apache.org/maven/maven-3/3.9.5/binaries/apache-maven-3.9.5-bin.tar.gz
          tar -zxvf apache-maven-3.9.5-bin.tar.gz
          mv apache-maven-3.9.5 maven
          export M2_HOME="$(pwd)/maven"
          export M2=$M2_HOME/bin
          export PATH=$M2:$PATH
          git clone --recursive https://github.com/powsybl/pypowsybl.git
          cd pypowsybl 
          git fetch
          git checkout move_connectable_prototype
          pip3 install --upgrade pip setuptools
          pip3 install -r requirements.txt
          pip3 install .
          cd ..

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Build wheel
        run: |
          pip3 install poetry
          poetry build

#      - name: Install wheel
#        run: pip3 install wheelhouse/*.whl --user

      - name: Run tests
        working-directory: ./src/tests # Run in subdir to use installed lib, not sources
        run: |
          pytest

#      - name: Type checking
#        run: mypy -p pypowsybl

#      - name: Dev install  # In order to generate coverage and linting, we need to install in sources
#        run: |
#          pip3 uninstall -y pypowsybl
#          python3 setup.py develop
#
#      - name: Generate coverage
#        run: |
#          coverage run -m pytest tests/
#          coverage xml
#
#      - name: Linting
#        run: pylint pypowsybl
#
#      - name: Sonar analysis
#        uses: sonarsource/sonarcloud-github-action@v1.6
#        env:
#          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        with:
#          args: |
#            -Dsonar.python.coverage.reportPaths=coverage.xml
#
#      - name: Run doc examples
#        working-directory: ./docs
#        run: make doctest
  package:
    name: Package wheels
    runs-on: ubuntu-latest
    needs: manylinux_build

    steps:
#      - name: Download wheels
#        uses: actions/download-artifact@v3
#        with:
#          path: download
#
#      - name: Upload wheels
#        uses: actions/upload-artifact@v3
#        with:
#          name: pypowsybl-wheels
#          path: |
#            download/**/*.whl

      - name: Release on PyPi
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          poetry publish